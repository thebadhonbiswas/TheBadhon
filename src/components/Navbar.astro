---
const {} = Astro.props;
---

<nav aria-label="Main Navigation" role="navigation" style="position: relative;">
  <div class="nav-header">
    <!-- Logo Left -->
    <a href="/" class="logo" aria-label="Homepage">
      <img src="favicon.svg" alt="Badhon Biswas - Logo">
    </a>

    <!-- Menu Toggle Button Right -->
    <button id="menuToggle" aria-label="Toggle Menu" aria-expanded="false">
      <!-- Menu Icon -->
      <svg id="menuIcon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24"
        fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M4 12h16" />
        <path d="M4 18h16" />
        <path d="M4 6h16" />
      </svg>

      <!-- Close Icon -->
      <svg id="closeIcon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24"
        fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
        style="display: none;">
        <path d="M18 6 6 18" />
        <path d="m6 6 12 12" />
      </svg>
    </button>
  </div>

  <!-- Animated Menu --><ul id="navMenu" role="menu">
    <li role="none">
      <a href="/" role="menuitem" aria-current={Astro.url.pathname === '/' ? 'page': undefined}>Home</a>
    </li>
    <li role="none">
      <a href="/about" role="menuitem" aria-current={Astro.url.pathname === '/about' ? 'page': undefined}>About</a>
    </li>
    <li role="none">
      <a href="/projects" role="menuitem" aria-current={Astro.url.pathname === '/projects' ? 'page': undefined}>Projects</a>
    </li>
    <li role="none">
      <a href="/contact" role="menuitem" aria-current={Astro.url.pathname === '/contact' ? 'page': undefined}>Contact</a>
    </li>
  </ul>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
    const toggleBtn = document.getElementById('menuToggle');
    const menu = document.getElementById('navMenu');
    const menuIcon = document.getElementById('menuIcon');
    const closeIcon = document.getElementById('closeIcon');

    toggleBtn.addEventListener('click', () => {
    const isOpen = menu.classList.toggle('show');
    menuIcon.style.display = isOpen ? 'none': 'block';
    closeIcon.style.display = isOpen ? 'block': 'none';
    toggleBtn.setAttribute('aria-expanded', isOpen ? 'true': 'false');
    });
    });
  </script>
</nav>



<style>
:root {
  --primary: #ff6a00;
  --secondary: #ffffff;
  --accent: #ffe0c2;
  --muted: #f5f5f5;
  --border: #e0e0e0;
  --highlight: #ffb266;
  --info: #fef3e2;

  /* Optional text colors */  
  --text-main: #333333;  
  --text-light: #666666;  
}  

/* ========================================
  Mobile & Tablet Styles (Default)
  ========================================
*/
nav {  
  position: relative;  
  font-family: system-ui, sans-serif;  
}  

.nav-header {  
  position: fixed;  
  top: 0;  
  left: 0;  
  right: 0;  
  height: 60px;  
  background: transparent;  
  display: flex;  
  justify-content: space-between;  
  align-items: center;  
  padding: 0 1rem;  
  z-index: 1200;  
}  

.logo {  
  display: flex;  
  align-items: center;  
  gap: 0.5rem;  
  text-decoration: none;  
  font-weight: 700;  
  font-size: 1.5rem;  
}  

.logo img {  
  width: 3rem;  
}  

#menuToggle {  
  background-color: #222;  
  border: none;  
  border-radius: 0.375rem;  
  padding: 0.5rem;  
  cursor: pointer;  
  color: white;  
  display: flex;  
  align-items: center;  
  justify-content: center;  
}  

#menuToggle:hover,  
#menuToggle:focus {  
  background-color: #444;  
  outline: none;  
}  

nav ul {  
  list-style: none;  
  flex-direction: column;  
  align-items: flex-start;  
  justify-content: flex-start;  
  gap: 0.7rem;  
  padding: 8rem 0 0 2rem;  
  margin: 0;  
  background-color: var(--accent);  
  position: fixed;  
  top: 0;  
  left: 0;  
  right: 0;  
  height: 100vh;  
  transform: translateY(-100%);  
  transition: transform 0.4s ease-in-out;  
  z-index: 1100;  
  display: flex;  
}  

nav ul.show {  
  transform: translateY(0);  
}  

nav a {  
  text-decoration: none;  
  font-size: 3rem;  
  font-weight: 700;  
  color: #1d4ed8;  
}  

nav a:hover,  
nav a:focus {  
  text-decoration: underline;  
}  

nav a[aria-current="page"] {  
  text-decoration: underline;  
  text-underline-offset: 2px;  
}

/* ========================================
  Desktop Styles (Screen width > 768px)
  ========================================
*/
@media (min-width: 768px) {
  /* Hide the mobile menu toggle button on desktops */
  #menuToggle {
    display: none;
  }

  /* Transform the main nav into a horizontal bar */
  nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 2rem;
    height: 70px; /* A standard header height */
    background-color: var(--secondary);
    border-bottom: 1px solid var(--border);
  }

  /* Reset the header wrapper */
  .nav-header {
    position: static;
    background: transparent;
    padding: 0;
    height: auto;
  }
  
  /* Convert the menu from a full-screen overlay to an inline list */
  nav ul {
    position: static;
    transform: none; /* Make it visible by default */
    height: auto;
    width: auto;
    background-color: transparent;
    padding: 0;
    margin: 0;
    
    flex-direction: row; /* Display links horizontally */
    align-items: center;
    gap: 1.5rem; /* Adjust spacing between links */
  }

  /* Adjust link styles for a more traditional desktop nav bar */
  nav a {
    font-size: 1rem;
    font-weight: 500;
    color: var(--text-main);
  }

  /* Enhance hover/focus and current page styles for desktop */
  nav a:hover,
  nav a:focus {
    color: var(--primary);
    text-decoration: underline;
    text-underline-offset: 4px;
  }

  nav a[aria-current="page"] {
    color: var(--primary);
    font-weight: 700;
  }
}

</style>